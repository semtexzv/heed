[package]
name = "heed"
version = "0.12.7"
authors = ["Kerollmops <renault.cle@gmail.com>"]
description = "A fully typed LMDB/MDBX wrapper with minimum overhead"
license = "MIT"
repository = "https://github.com/Kerollmops/heed"
keywords = ["lmdb", "database", "storage", "typed"]
categories = ["database", "data-structures"]
readme = "../README.md"
edition = "2018"

[dependencies]
byteorder = { version = "1.3.4", default-features = false }
heed-traits = { version = "0.7.0", path = "../heed-traits" }
heed-types = { version = "0.7.2", path = "../heed-types" }
libc = "0.2.80"
lmdb-rkv-sys = { git = "https://github.com/meilisearch/lmdb-rs", features = ["vendored"], optional = true }
mdbx-sys = { version = "0.7.1", optional = true }
rocksdb = { version = "0.21.0", optional = true }

once_cell = "1.5.2"
page_size = "0.4.2"
serde = { version = "1.0.118", features = ["derive"], optional = true }
synchronoise = "1.0.0"
zerocopy = "0.3.0"

[dev-dependencies]
serde = { version = "1.0.118", features = ["derive"] }
tempfile = "3.3.0"

[target.'cfg(windows)'.dependencies]
url = "2.2.0"

[features]
# The `serde` feature makes some types serializable,
# like the `EnvOpenOptions` struct.
default = ["rock", "lmdb", "serde", "serde-bincode", "serde-json", "proto"]

# The #MDB_NOTLS flag is automatically set on Env opening and
# RoTxn implements the Send trait. This allows the user to move
# a RoTxn between threads as read transactions will no more use
# thread local storage and will tie reader locktable slots to
# #MDB_txn objects instead of to threads.
#
# According to the LMDB documentation, when this feature is not enabled:
# A thread can only use one transaction at a time, plus any child
# transactions. Each transaction belongs to one thread. [...]
# The #MDB_NOTLS flag changes this for read-only transactions.
#
# And a #MDB_BAD_RSLOT error will be thrown when multiple read
# transactions exists on the same thread
read-txn-no-tls = []

# Choose between using the MDBX key-value store or LMDB
# MDBX is a fork of LMDB: https://github.com/erthink/libmdbx
#
# You cannot use both features at the same time, you have to choose!
lmdb = ["lmdb-rkv-sys"]
mdbx = ["mdbx-sys"]
rock = ["rocksdb"]

# Whether to tell LMDB to use POSIX semaphores during compilation
# (instead of the default, which are System V semaphores).
# POSIX semaphores are required for Apple's App Sandbox on iOS & macOS,
# and are possibly faster and more appropriate for single-process use.
# There are tradeoffs for both POSIX and SysV semaphores; which you
# should look into before enabling this feature. Also, see here:
# https://github.com/LMDB/lmdb/blob/3947014aed7ffe39a79991fa7fb5b234da47ad1a/libraries/liblmdb/lmdb.h#L46-L69
posix-sem = ["lmdb-rkv-sys/posix-sem"]

# Enable the serde en/decoders for bincode or serde_json
serde-bincode = ["heed-types/serde", "heed-types/bincode"]
serde-json = ["heed-types/serde", "heed-types/serde_json"]
serde-ordcode = ["heed-types/serde", "heed-types/ordcode"]
proto = ["heed-types/protokit"]


# serde_json features
preserve_order = ["heed-types/preserve_order"]
arbitrary_precision = ["heed-types/arbitrary_precision"]
raw_value = ["heed-types/raw_value"]
unbounded_depth = ["heed-types/unbounded_depth"]
